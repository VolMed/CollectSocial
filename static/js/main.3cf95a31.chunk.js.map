{"version":3,"sources":["Input/index.js","Table/index.js","Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["dValue","form","fieldname","placeholder","onSchemaSelect","useState","value","setValue","useEffect","setFieldsValue","allowClear","onChange","e","target","columns","title","dataIndex","rowsData","data","map","el","key","id","dataSource","pagination","defaultPageSize","showSizeChanger","pageSizeOptions","Option","Select","FormItem","name","label","required","children","Item","rules","SelectType","options","onRaritySelect","showSearch","style","textAlign","collections","formFields","type","Input","Form","useForm","ids","setIds","rarity","collection_name","limit","values","setValues","claimable","setClaimable","startClaim","setStartClaim","setRarity","schemaNames","setSchemaNames","body","schema_name","contract_whitelist","order","page","seller_blacklist","show_seller_contracts","sort","state","symbol","fetch","method","headers","JSON","stringify","then","res","json","useCallback","getFieldsValue","length","forEach","idx","assets","asset_id","listing_price","price","amount","prev","position","a","b","display","justifyContent","flexDirection","onFinish","rest","shouldUpdate","width","Array","fill","_","toString","margin","htmlType","onClick","resetFields","Table","size","pageSize","Header","Layout","Content","App","formItems","setFormItems","className","color","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cf95a31.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Input } from 'antd';\r\n\r\nexport default ({ dValue, form, fieldname, placeholder, onSchemaSelect }) => {\r\n  const [value, setValue] = useState(dValue);\r\n  \r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      [fieldname]: value\r\n    });\r\n  }, [value, fieldname, form]);\r\n  \r\n  const onFieldChange = (e) => {\r\n    const value = e.target.value;\r\n    setValue(e.target.value);\r\n    form.setFieldsValue({\r\n      [fieldname]: value\r\n    });\r\n\r\n    if (onSchemaSelect) { onSchemaSelect() }\r\n  };\r\n\r\n  return <>\r\n    <Input\r\n      placeholder={placeholder}\r\n      value={value}\r\n      allowClear\r\n      onChange={onFieldChange}\r\n    />\r\n  </>;\r\n}\r\n\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: 'Item ID',\r\n    dataIndex: 'id',\r\n  },\r\n  {\r\n    title: 'Position',\r\n    dataIndex: 'position',\r\n  },\r\n  {\r\n    title: 'Prise',\r\n    dataIndex: 'listing_price',\r\n  },\r\n];\r\n\r\nexport default ({ data }) => {\r\n  const rowsData = data.map(el => ({ ...el, key: el.id }));\r\n  return <Table columns={columns} dataSource={rowsData} pagination={{ defaultPageSize: 5, showSizeChanger: true, pageSizeOptions: ['5', '10', '20', '30']}}/>;\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Form, Button, Select } from 'antd';\r\nimport Input from '../Input';\r\nimport Table from '../Table';\r\n\r\nconst { Option } = Select;\r\n\r\nconst FormItem = ({ name, label, required, children }) => {\r\n  return <Form.Item\r\n    name={name}\r\n    label={label}\r\n    rules={[\r\n      {\r\n        required,\r\n      },\r\n    ]}\r\n  >\r\n    {children}\r\n  </Form.Item>;\r\n};\r\n\r\nconst SelectType = ({ form, fieldname, options, onSchemaSelect, onRaritySelect }) => {\r\n\r\n  const onFieldChange = (value) => {\r\n    form.setFieldsValue({\r\n      [fieldname]: value\r\n    });\r\n    if (onSchemaSelect) onSchemaSelect()\r\n    if (onRaritySelect) onRaritySelect()\r\n  };\r\n  \r\n  return <Select\r\n    placeholder={`Select a ${fieldname}`}\r\n    onChange={onFieldChange}\r\n    allowClear\r\n    showSearch\r\n    style={{ textAlign: 'left' }}\r\n  >\r\n    {options.map(el => <Option key={el} value={el}>{el}</Option>)}\r\n  </Select>;\r\n};\r\n\r\nconst collections = [\r\n  'gdz.topps', 'alien.worlds', 'darkcountryh', 'hodlgod', 'officialhero', 'stf.capcom'\r\n];\r\n\r\nconst formFields = [\r\n  {\r\n    type: 'input',\r\n    name: 'name',\r\n    label: 'Name',\r\n    required: true,\r\n    children: (form) => <Input placeholder={'NFT Name'} form={form} fieldname={'name'}/>\r\n  },\r\n  {\r\n    type: 'select',\r\n    name: 'collection_name',\r\n    label: 'Collection Name',\r\n    required: true,\r\n    children: (form, onSchemaSelect) => <SelectType form={form} fieldname={'collection_name'} options={collections} onSchemaSelect={onSchemaSelect}/>\r\n  },\r\n  // {\r\n  //   type: 'input',\r\n  //   name: 'schema_name',\r\n  //   label: 'Schema Name',\r\n  //   required: true,\r\n  //   children: (form, onSchemaSelect) => <Input placeholder={'series1'} form={form} fieldname={'schema_name'} />\r\n  // }\r\n];\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n  const [ids, setIds] = useState([]);\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    rarity: '',\r\n    collection_name: '',\r\n    limit: ''\r\n  });\r\n  const [claimable, setClaimable] = useState([]);\r\n  const [startClaim, setStartClaim] = useState(false);\r\n  const [rarity, setRarity] = useState([]);\r\n  const [schemaNames, setSchemaNames] = useState([]);\r\n  \r\n  const body = ({ collection_name, name, rarity, schema_name, limit }) => ({\r\n    collection_name: collection_name,\r\n    contract_whitelist: 'theonlykarma,sales.heroes,niftywizards,cc32dninenft',\r\n    'data:text.name': name,\r\n    'data:text.rarity': rarity,\r\n    limit: limit,\r\n    order: 'asc',\r\n    page: '1',\r\n    schema_name: schema_name,\r\n    seller_blacklist: 'dximg.wam,xpvrs.wam',\r\n    show_seller_contracts: 'false',\r\n    sort: 'price',\r\n    state: '1',\r\n    symbol: 'WAX',\r\n  });\r\n  \r\n  useEffect(() => {\r\n    if (!startClaim) return;\r\n    fetch('https://wax.api.aa.atomichub.io/atomicmarket/v1/sales', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token'\r\n      },\r\n      body: JSON.stringify(body(values))\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setIds(res.data.map(el => el));\r\n      });\r\n  }, [startClaim, values]);\r\n  \r\n  const onRaritySelect = useCallback(() => {\r\n    setRarity([])\r\n    let {collection_name, schema_name} = form.getFieldsValue();\r\n    if(collection_name && schema_name){\r\n      fetch(`https://wax.api.atomichub.io/v1/data/filters/${collection_name}?result=true&schema_name=${schema_name}&attributes=rarity`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token'\r\n          },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if(res.data[0]?.values){\r\n            setRarity(res.data[0].values);\r\n          }\r\n        });\r\n    }\r\n  }, [form]);\r\n  \r\n  const onSchemaSelect = useCallback(() => {\r\n    setSchemaNames([])\r\n    let { collection_name } = form.getFieldsValue();\r\n\r\n    if(collection_name){\r\n      fetch(`https://wax.api.aa.atomichub.io/atomicassets/v1/collections/${collection_name}/schemas`,{\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token'\r\n          }})\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if(res.data.length){\r\n            setSchemaNames(res.data.map(el => el.schema_name));\r\n          }\r\n        });\r\n    }\r\n  }, [form]);\r\n  \r\n  useEffect(() => {\r\n    setClaimable([]);\r\n    if (!startClaim) return;\r\n    \r\n    ids.forEach((el, idx) => {\r\n      const id = el.assets[0]?.asset_id;\r\n      const name = el.assets[0]?.name;\r\n      const listing_price = `${el.price.amount / 100000000} WAX`;\r\n      if(id){\r\n        fetch(`https://immortalgames.io/api/claimed-assets/${id}`,   {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token'\r\n          }})\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            if (!res) {\r\n              setClaimable(prev => {\r\n                return [...prev, { id, position: idx+1, listing_price, name }].sort((a, b) => {\r\n                  return a.position - b.position;\r\n                });\r\n              });\r\n            }\r\n          });\r\n      }\r\n      \r\n    });\r\n    setStartClaim(false);\r\n  }, [ids]);\r\n  \r\n  const onFinish = (values) => {\r\n    setValues(values);\r\n    setStartClaim(true);\r\n  };\r\n  \r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n  \r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'row'}}>\r\n      <Form form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n        {formFields.map(el => {\r\n          const { children, ...rest } = el;\r\n          return <FormItem key={rest.name} {...rest}>{children(form, onSchemaSelect)}</FormItem>;\r\n        })}\r\n        \r\n        <Form.Item name='schema_name' label='Schema Name' rules={[{required: true}]}>\r\n          <SelectType fieldname={'schema_name'} options={schemaNames} form={form} onSchemaSelect={onRaritySelect}/>\r\n        </Form.Item>\r\n        \r\n        <Form.Item shouldUpdate name='rarity' label='Rarity' rules={[{required: false}]}>\r\n          <SelectType fieldname={'rarity'} options={rarity} form={form} />\r\n        </Form.Item>\r\n\r\n        <Form.Item style={{ display: 'flex', justifyContent: 'right'}}>\r\n          <Form.Item name='limit' rules={[{required: true}]} style={{width: '100%'}}>\r\n            <SelectType fieldname={'limit'} options={new Array(10).fill('').map((_, idx) => (idx*5).toString())} form={form} />\r\n          </Form.Item>\r\n          <Button style={{ margin: '0 5px' }} type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button htmlType=\"button\" onClick={onReset}>\r\n            Reset\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Table size={'small'} data={claimable} pagination={{ pageSize: 5 }} pageSize={5}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import {useState} from 'react'\nimport { Layout } from 'antd';\nimport Form from './Form'\nimport { Button } from 'antd';\nimport './App.css';\nconst { Header, Content } = Layout;\n\nfunction App() {\n  const [formItems, setFormItems] = useState([1])\n  \n  const onSetFormItems = () => {\n    setFormItems(prev => {\n      return [...prev, 1]\n    })\n  }\n  \n  return (\n    <div className=\"App\">\n        <Layout>\n          <Header style={{color: 'white', fontSize: 20 }}>Collect Social Filter For Claiming!</Header>\n          <Content className=\"site-layout-content\">\n            {formItems.map((_, idx) => <Form key={idx}/>)}\n          </Content>\n          <Button onClick={onSetFormItems}>Add Search</Button>\n        </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}